TestCase subclass: #AlgovidTests	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-104431-tests'!!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:44'!test17SiTieneDiagnosticoSospechosoNoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Dolor de Cabeza' a: 'Alex'.	self deny: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/17/2021 15:51'!test24SiMenosDel40PorCientoDeLasBurbujasEstanPinchadasHayClasesPresenciales	algovid nuevaPersona: 'Messi'.	algovid nuevaPersona: 'Paredes'. 	algovid nuevaBurbuja: 'Titulares'.	algovid agregarA: 'Messi' aLaBurbuja: 'Titulares'.	algovid agregarA: 'Paredes' aLaBurbuja: 'Titulares'.		algovid nuevaPersona: 'Aguero'.	algovid nuevaPersona: 'Marchesin'. 	algovid nuevaBurbuja: 'Suplentes'.	algovid agregarA: 'Aguero' aLaBurbuja: 'Suplentes'.	algovid agregarA: 'Marchesin' aLaBurbuja: 'Suplentes'.		algovid agregarSintoma: 'Fiebre' a: 'Aguero'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Aguero'.	algovid agregarSintoma: 'Diarrea' a: 'Aguero'.		algovid nuevaPersona: 'Scaloni'.	algovid nuevaPersona: 'Samuel'. 	algovid nuevaBurbuja: 'Cuerpo Tecnico'.	algovid agregarA: 'Scaloni' aLaBurbuja: 'Cuerpo Tecnico'.	algovid agregarA: 'Samuel' aLaBurbuja: 'Cuerpo Tecnico'.		algovid nuevoColegio: 'Seleccion'.	algovid agregarA: 'Titulares' alColegio: 'Seleccion'.	algovid agregarA: 'Suplentes' alColegio: 'Seleccion'.	algovid agregarA: 'Cuerpo Tecnico' alColegio: 'Seleccion'.		self assert: (algovid clasesPresencialesEn: 'Seleccion').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:46'!test18SiEsEsencialYTieneDiagnosticoPositivoNoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Dolor de Cabeza' a: 'Alex'.	algovid agregarSintoma: 'Dolor de Muelas' a: 'Alex'.	algovid agregarSintoma: 'Tos' a: 'Alex'.		self deny: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:35'!test07SiNoTieneSintomasSuEstadoEsNegativo	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Negativo'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:55'!test21SiTieneContactoEstrechoConAlguienDeDiagnosticoPositivoNoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.	algovid nuevaPersona: 'Luciana'.		algovid agregarSintoma: 'Tos' a: 'Luciana'.	algovid agregarSintoma: 'Dolor de Cabeza' a: 'Luciana'.	algovid agregarSintoma: 'Enojo' a: 'Luciana'.		algovid contactoEstrechoEntre: 'Alex' y: 'Luciana'.		self deny: (algovid puedeCircular: 'Alex').	! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/17/2021 15:51'!test25SiMasDel40PorCientoDeLasBurbujasEstanPinchadasNoHayClasesPresenciales	algovid nuevaPersona: 'Messi'.	algovid nuevaPersona: 'Paredes'. 	algovid nuevaBurbuja: 'Titulares'.	algovid agregarA: 'Messi' aLaBurbuja: 'Titulares'.	algovid agregarA: 'Paredes' aLaBurbuja: 'Titulares'.		algovid nuevaPersona: 'Aguero'.	algovid nuevaPersona: 'Marchesin'. 	algovid nuevaBurbuja: 'Suplentes'.	algovid agregarA: 'Aguero' aLaBurbuja: 'Suplentes'.	algovid agregarA: 'Marchesin' aLaBurbuja: 'Suplentes'.		algovid agregarSintoma: 'Fiebre' a: 'Aguero'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Aguero'.	algovid agregarSintoma: 'Diarrea' a: 'Aguero'.		algovid nuevoColegio: 'Seleccion'.	algovid agregarA: 'Titulares' alColegio: 'Seleccion'.	algovid agregarA: 'Suplentes' alColegio: 'Seleccion'.		self deny: (algovid clasesPresencialesEn: 'Seleccion').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/17/2021 15:52'!test23SiAlguienDeLaBurbujaEsPositivoLaBurbujaEstaPinchada	algovid nuevaPersona: 'Messi'.	algovid nuevaPersona: 'Paredes'.	algovid nuevaPersona: 'Otamendi'. 	algovid nuevaBurbuja: 'Titulares'.	algovid agregarA: 'Messi' aLaBurbuja: 'Titulares'.	algovid agregarA: 'Paredes' aLaBurbuja: 'Titulares'.	algovid agregarA: 'Otamendi' aLaBurbuja: 'Titulares'.	algovid estaVacunadx: 'Messi'.	algovid estaVacunadx: 'Paredes'.	algovid estaVacunadx: 'Otamendi'.	algovid agregarSintoma: 'Fiebre' a: 'Otamendi'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Otamendi'.	algovid agregarSintoma: 'Diarrea' a: 'Otamendi'.		self assert: (algovid burbujaPinchada: 'Titulares').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:38'!test12SiTieneDosSintomasHabitualesSuEstadoEsSospechoso	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Fiebre' a: 'Alex'.	algovid agregarSintoma: 'Tos' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Sospechoso'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:38'!test11SiTieneDosSintomasYUnoEsHabitualesSuEstadoEsSospechoso	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Dolor de Cabeza' a: 'Alex'.	algovid agregarSintoma: 'Tos' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Sospechoso'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:36'!test09SiTieneUnSintomaHabitualSuEstadoEsSospechoso	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Tos' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Sospechoso'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 13:40'!test22SiAlguienDeLaBurbujaEsPositivoNadiePuedeCircular	algovid nuevaPersona: 'Messi'.	algovid nuevaPersona: 'Paredes'.	algovid nuevaPersona: 'Otamendi'. 	algovid nuevaBurbuja: 'Titulares'.	algovid agregarA: 'Messi' aLaBurbuja: 'Titulares'.	algovid agregarA: 'Paredes' aLaBurbuja: 'Titulares'.	algovid agregarA: 'Otamendi' aLaBurbuja: 'Titulares'.	algovid estaVacunadx: 'Messi'.	algovid estaVacunadx: 'Paredes'.	algovid estaVacunadx: 'Otamendi'.	algovid agregarSintoma: 'Fiebre' a: 'Otamendi'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Otamendi'.	algovid agregarSintoma: 'Diarrea' a: 'Otamendi'.		self deny: (algovid puedeCircular: 'Messi').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:42'!test15SiTieneCuatroSintomasNoHabitualesSuEstadoEsPositivo	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Dolor de Cabeza' a: 'Alex'.	algovid agregarSintoma: 'Dolor de Muelas' a: 'Alex'.	algovid agregarSintoma: 'Diarrea' a: 'Alex'.	algovid agregarSintoma: 'Vomitos' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Positivo'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:37'!test10SiTieneDosSintomasNoHabitualSuEstadoEsSospechoso	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Falta de apetito' a: 'Alex'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Sospechoso'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:50'!test19SiTieneContactoEstrechoConAlguienDeDiagnosticoNegativoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.	algovid nuevaPersona: 'Luciana'.		algovid contactoEstrechoEntre: 'Alex' y: 'Luciana'.		self assert: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:40'!test14SiTieneTresSintomasYUnoEsHabitualSuEstadoEsPositivo	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Dolor de Cabeza' a: 'Alex'.	algovid agregarSintoma: 'Dolor de Muelas' a: 'Alex'.	algovid agregarSintoma: 'Tos' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Positivo'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:25'!test01PorDefectoUnaPersonaNoPuedeCircular  algovid nuevaPersona: 'Alex'.    self deny: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:27'!test02UnaPersonaVacunadaPuedeCircular  algovid nuevaPersona: 'Alex'.  algovid estaVacunadx: 'Alex'.  self assert: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:31'!test05SiEsPersonaDeRiesgoYEstaVacunadaNoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonaDeRiesgo: 'Alex'.	algovid estaVacunadx: 'Alex'.	self deny: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:39'!test13SiTieneTresSintomasNoHabitualesSuEstadoEsSospechoso	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Dolor de Cabeza' a: 'Alex'.	algovid agregarSintoma: 'Dolor de Muelas' a: 'Alex'.	algovid agregarSintoma: 'Diarrea' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Sospechoso'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:36'!test08SiTieneUnSintomaNoHabitualSuEstadoEsSospechoso	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.		algovid agregarSintoma: 'Dolor de Cabeza' a: 'Alex'.	self assert: (algovid diagnosticoDe: 'Alex') equals: 'Sospechoso'.! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:52'!test20SiTieneContactoEstrechoConAlguienDeDiagnosticoSospechosoNoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonalEsencial: 'Alex'.	algovid nuevaPersona: 'Luciana'.	algovid agregarSintoma: 'Tos' a: 'Luciana'. 		algovid contactoEstrechoEntre: 'Luciana' y: 'Alex'.		self deny: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:45'!test16SiEstaVacunadoYTieneDiagnosticoNegativoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid estaVacunadx: 'Alex'.	self assert: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:28'!test03SiEsPersonaEsencialPuedeCircular  algovid nuevaPersona: 'Alex'.  algovid esPersonalEsencial: 'Alex'.  self assert: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:31'!test06SiEsPersonalEsencialYEsPersonaDeRiesgoNoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonaDeRiesgo: 'Alex'.	algovid estaVacunadx: 'Alex'.	algovid esPersonalEsencial: 'Alex'.	self deny: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:31'!test04SiEsPersonaDeRiesgoNoPuedeCircular	algovid nuevaPersona: 'Alex'.	algovid esPersonaDeRiesgo: 'Alex'.	self deny: (algovid puedeCircular: 'Alex').! !!AlgovidTests methodsFor: 'running' stamp: 'AG 6/15/2021 11:24'!setUp	algovid := AlgoVid new.! !TestCase subclass: #BurbujaTests	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-104431-tests'!!BurbujaTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:18'!test04SiUnaBurbujaNoPinchadaPerteneceAUnColegioSinClasesPresencialesLaBurbujaSigueSinEstarPinchada	|unColegio unaBurbuja otraBurbuja unaPersona|	unaBurbuja := Burbuja new.	otraBurbuja := Burbuja new.		unaPersona := Persona new.	unaBurbuja agregarPersonaABurbuja: unaPersona.		unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.	unaPersona agregarSintoma: 'Dolor de Cabeza'.		unColegio := Colegio new.	unColegio agregarBurbuja: unaBurbuja.	unColegio agregarBurbuja: otraBurbuja.	unColegio clasesSonPresenciales.		self deny: otraBurbuja burbujaPinchada.			! !!BurbujaTests methodsFor: 'tests' stamp: 'AG 6/15/2021 10:38'!test02SiAlguienEnLaBurbujaEsSospechosoLaBurbujaNoEstaPinchada	|unaBurbuja persona1 persona2 persona3|	unaBurbuja := Burbuja new.	persona1 := Persona new.	persona2 := Persona new.	persona3 := Persona new.		unaBurbuja agregarPersonaABurbuja: persona1.	unaBurbuja agregarPersonaABurbuja: persona2.	unaBurbuja agregarPersonaABurbuja: persona3.	persona2 agregarSintoma: 'Tos'.	self deny: unaBurbuja burbujaPinchada.	! !!BurbujaTests methodsFor: 'tests' stamp: 'AG 6/15/2021 10:40'!test03SiUnIntegranteDeLaBurbujaTieneEstadoPositivoLaBurbujaEstaPinchada	|unaBurbuja persona1 persona2 persona3|	unaBurbuja := Burbuja new.	persona1 := Persona new.	persona2 := Persona new.	persona3 := Persona new.	unaBurbuja agregarPersonaABurbuja: persona1.	unaBurbuja agregarPersonaABurbuja: persona2.	unaBurbuja agregarPersonaABurbuja: persona3.		persona2 agregarSintoma: 'Tos'.	persona2 agregarSintoma: 'Fiebre'.	persona2 agregarSintoma: 'Dolor de Cabeza'.		self assert: unaBurbuja burbujaPinchada.	! !!BurbujaTests methodsFor: 'tests' stamp: 'AG 6/15/2021 10:37'!test01PorDefectoUnaBurbujaNoEstaPinchada	|burbuja|	burbuja := Burbuja new.	self deny: burbuja burbujaPinchada.	! !TestCase subclass: #ColegioTests	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-104431-tests'!!ColegioTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:23'!test02SiMenosDel40PorCientoDeLasBurbujasEstanPinchadasLasClasesSonPresenciales	|unColegio unaBurbuja otraBurbuja otraBurbujaMas unaPersona otraPersona|	unaBurbuja := Burbuja new.	otraBurbuja := Burbuja new.	otraBurbujaMas := Burbuja new.		unaPersona := Persona new.	unaBurbuja agregarPersonaABurbuja: unaPersona.	unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.	unaPersona agregarSintoma: 'Dolor de Cabeza'.		otraPersona := Persona new.	otraBurbuja agregarPersonaABurbuja: otraPersona.	otraPersona agregarSintoma: 'Tos'.		unColegio := Colegio new.	unColegio agregarBurbuja: unaBurbuja.	unColegio agregarBurbuja: otraBurbuja.	unColegio agregarBurbuja: otraBurbujaMas.				self assert: unColegio clasesSonPresenciales.! !!ColegioTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:18'!test01PorDefectoLasClasesSonPresenciales	|unColegio|	unColegio := Colegio new.		self assert: unColegio clasesSonPresenciales.! !!ColegioTests methodsFor: 'tests' stamp: 'AG 6/15/2021 11:22'!test03SiMasDel40PorCientoDeLasBurbujasEstanPinchadasLasClasesNoSonPresenciales	|unColegio unaBurbuja otraBurbuja otraBurbujaMas unaPersona otraPersona|	unaBurbuja := Burbuja new.	otraBurbuja := Burbuja new.	otraBurbujaMas := Burbuja new.		unaPersona := Persona new.	unaBurbuja agregarPersonaABurbuja: unaPersona.	unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.	unaPersona agregarSintoma: 'Dolor de Cabeza'.		otraPersona := Persona new.	otraBurbuja agregarPersonaABurbuja: otraPersona.	otraPersona agregarSintoma: 'Tos'.	otraPersona agregarSintoma: 'Fiebre'.	otraPersona agregarSintoma: 'Dolor de Cabeza'.		unColegio := Colegio new.	unColegio agregarBurbuja: unaBurbuja.	unColegio agregarBurbuja: otraBurbuja.	unColegio agregarBurbuja: otraBurbujaMas.				self deny: unColegio clasesSonPresenciales.! !TestCase subclass: #PersonaTests	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-104431-tests'!!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:49'!test17SiUnaPersonaTieneTresSintomasYUnoEsHabitualSuDiagnosticoEsPositivo	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Tos'.	persona agregarSintoma: 'Dolor de Cabeza'.	persona agregarSintoma: 'Diarrea'.	self assert: persona determinarDiagnostico equals: 'Positivo'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:38'!test03PorDefectoUnaPersonaNoEsEsencial	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.		self deny: persona esencial.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 10:21'!test27SiUnaPersonaPerteneceAUnaBurbujaNoPinchadaPuedeCircular	|unaPersona otraPersona unaBurbuja|	unaPersona := Persona new.	unaPersona asignarNombre: 'Alex'.	unaPersona agregarSintoma: 'Dolor de Cabeza'.		otraPersona := Persona new.	otraPersona asignarNombre: 'Luciana'.	otraPersona aplicarVacuna.		unaBurbuja := Burbuja new.	unaBurbuja agregarPersonaABurbuja: unaPersona.	unaBurbuja agregarPersonaABurbuja: otraPersona.		self assert: otraPersona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:41'!test10SiUnaPersonaEsEsencialYEsDeclaradaDeRiesgoNoPuedeCircular	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.		persona declararEsencial.	persona declararPersonaDeRiesgo.	persona aplicarVacuna.	self deny: persona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/17/2021 15:55'!test29SiUnaPersonaTieneCuatroSintomaNoHabitualesSuEstadoEsPositivo	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararEsencial.	persona agregarSintoma: 'Dolor de Cabeza'.	persona agregarSintoma: 'Diarrea'.	persona agregarSintoma: 'Falta de Apetito'.	persona agregarSintoma: 'Perdida de olfato'.	self assert: persona determinarDiagnostico equals: 'Positivo'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:49'!test15SiUnaPersonaTieneDosSintomasHabitualesSuDiagnosticoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Tos'.	persona agregarSintoma: 'Fiebre'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:43'!test11SiUnaPersonaTieneUnSintomaNoHabitualSuDiagnosticoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Dolor de Cabeza'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 10:18'!test28SiUnaPersonaPerteneceAUnaBurbujaPinchadaNoPuedeCircular	|unaPersona otraPersona unaBurbuja|	unaPersona := Persona new.	unaPersona asignarNombre: 'Alex'.		otraPersona := Persona new.	otraPersona asignarNombre: 'Luciana'.	unaPersona agregarSintoma: 'Dolor de Cabeza'.	unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.		unaBurbuja := Burbuja new.	unaBurbuja agregarPersonaABurbuja: unaPersona.	unaBurbuja agregarPersonaABurbuja: otraPersona.	self deny: otraPersona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:36'!test22SiUnaPersonaEsEsencialYTieneTresSintomaNoHabitualesSuEstadoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararEsencial.	persona agregarSintoma: 'Dolor de Cabeza'.	persona agregarSintoma: 'Diarrea'.	persona agregarSintoma: 'Falta de Apetito'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:51'!test21SiUnaPersonaEsEsencialYVacunadaYTieneUnSintomaSuEstadoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararEsencial.	persona aplicarVacuna.	persona agregarSintoma: 'Dolor de Cabeza'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:48'!test18SiUnaPersonaTieneCuatroSintomasNoHabitualesSuDiagnosticoEsPositivo	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Dolor de Estomago'.	persona agregarSintoma: 'Dolor de Cabeza'.	persona agregarSintoma: 'Diarrea'.	persona agregarSintoma: 'Falta de apetito'.	self assert: persona determinarDiagnostico equals: 'Positivo'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:50'!test19SiUnaPersonaEsEsencialYTieneUnSintomaSuEstadoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararEsencial.	persona agregarSintoma: 'Dolor de Cabeza'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:54'!test24SiUnaPersonaTieneUnSintomaNoPuedeCircular	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Dolor de Cabeza'.	self deny: persona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:45'!test14SiUnaPersonaTieneDosSintomasYUnoEsHabitualSuDiagnosticoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Tos'.	persona agregarSintoma: 'Dolor de Cabeza'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:40'!test08SiUnaPersonaEsDeclaradaDeRiesgoNoPuedeCircular	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.			persona declararPersonaDeRiesgo.		self deny: persona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:38'!test04PorDefectoUnaPersonaNoEsDeRiesgo	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	self deny: persona deRiesgo.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:37'!test02PorDefectoUnaPersonaNoEstaVacunada	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.		self deny: persona estaVacunado.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:44'!test13SiUnaPersonaTieneDosSintomaNoHabitualesSuDiagnosticoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Dolor de Cabeza'.	persona agregarSintoma: 'Diarrea'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:39'!test07SiUnaPersonaEsDeclaradaEsencialEntoncesPuedeCircular	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararEsencial.	self assert: persona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:37'!test01PorDefectoUnaPersonaNoPuedeCircular	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	self deny: persona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:52'!test23SiUnaPersonaEsDeRiesgoYTieneUnSintomaSuEstadoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararPersonaDeRiesgo.	persona agregarSintoma: 'Dolor de Cabeza'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/17/2021 15:56'!test30SiUnaPersonaTieneMasDeCuatroSintomaSuEstadoEsPositivo	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararEsencial.	persona agregarSintoma: 'Dolor de Cabeza'.	persona agregarSintoma: 'Diarrea'.	persona agregarSintoma: 'Falta de Apetito'.	persona agregarSintoma: 'Perdida de olfato'.	persona agregarSintoma: 'Perdida de vision'.	self assert: persona determinarDiagnostico equals: 'Positivo'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:40'!test09SiUnaPersonaEsDeclaradaDeRiesgoYSeVacunaNoPuedeCircular	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararPersonaDeRiesgo.	persona aplicarVacuna.	self deny: persona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 10:10'!test25SiUnaPersonaTieneContactoEstrechoConAlguienSospechosoNoPuedeCircular	|unaPersona otraPersona|	unaPersona := Persona new.	unaPersona asignarNombre: 'Alex'.	unaPersona agregarSintoma: 'Dolor de Cabeza'.		otraPersona := Persona new.	otraPersona asignarNombre: 'Luciana'.	otraPersona declararEsencial.	otraPersona seRelacionoCon: unaPersona.		self deny: otraPersona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:44'!test12SiUnaPersonaTieneUnSintomaHabitualSuDiagnosticoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Tos'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 11:02'!test06SiUnaPersonaSeAplicaLaVacunaPuedeCircular	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona aplicarVacuna.	self assert: persona puedeCircular.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:49'!test16SiUnaPersonaTieneTresSintomasNoHabitualesSuDiagnosticoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona agregarSintoma: 'Falta de Apetito'.	persona agregarSintoma: 'Dolor de Cabeza'.	persona agregarSintoma: 'Diarrea'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:38'!test05PorDefectoUnaPersonaTieneDiagnosticoNegativo	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	self assert: persona determinarDiagnostico equals: 'Negativo'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 09:36'!test20SiUnaPersonaEsEsencialYTieneUnSintomaNoHabitualSuEstadoEsSospechoso	|persona|	persona := Persona new.	persona asignarNombre: 'Alex'.	persona declararEsencial.	persona agregarSintoma: 'Dolor de Cabeza'.	self assert: persona determinarDiagnostico equals: 'Sospechoso'.! !!PersonaTests methodsFor: 'as yet unclassified' stamp: 'AG 6/15/2021 10:11'!test26SiUnaPersonaTieneContactoEstrechoConAlguienPositivoNoPuedeCircular	|unaPersona otraPersona|	unaPersona := Persona new.	unaPersona asignarNombre: 'Alex'.	unaPersona agregarSintoma: 'Dolor de Cabeza'.	unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.		otraPersona := Persona new.	otraPersona asignarNombre: 'Luciana'.	otraPersona aplicarVacuna.	otraPersona declararEsencial.		unaPersona seRelacionoCon: otraPersona.	self deny: otraPersona puedeCircular.! !